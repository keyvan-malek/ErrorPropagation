#####################################################################
##### Runtime parameters for CalFEWS model 
#####################################################################
##### Syntax notes, to help us parse file properly in bash
#####	- Leave space between variable & assignment
#####	- Put quotes around all assignments, even numbers & boolean 
#####	- Format boolean with capital first letter, lower case second letter (e.g. True)
#####################################################################

# parallel or non-parallel 
parallel_mode = "False" 				# True or False

# is this run on cluster?
cluster_mode = "False"

# if cluster, how many nodes to use? (only active if parallel_mode==True & cluster_mode==True)
num_nodes = "1"

# if cluster, how many processors PER NODE? (only active if parallel_mode==True & cluster_mode==True)
processors_per_node = "16"

# if local parallel (not cluster), how many processors? (only active if parallel_mode==True & cluster_mode==False)
num_processors = "2"

# base directory for results output (path relative to working_directory)
output_directory = "results"

# infrastructure scenarios. This will also be name of output results folder (relative to output_directory). See 'cord/scenarios/scenarios_main.json' for options. 
scenario_name = "baseline_wy2017"				# baseline_wy2017, FKC_capacity_rehab_full, etc.

# type of run mode
model_mode = "simulation"					# sensitivity, validation, simulation, climate_ensemble

# use generator? only used in sensitivity runs
use_generator = "True"

# To run full dataset, short_test = -1. Else enter number of days to run, starting at sd. e.g. 365 for 1 year only.
short_test = "-1"

# print logs to external file? If false, prints to terminal.
print_log = "False"

# positive seed for random generator. Set -1 to not set the seed.
seed = "1001"


# flow input params, see 'cord/data/input/base_inflows.json' for use of these params.
# "CDEC", "CDEC_short", "CDEC_20062026", "WRF", "WRF_GW_corr", "DryYearAdded", "WetYearAdded", "Bias_Corrected", "Remove_AR"
# "AR_1.5", "AR_0.5", "OverEst_Drought", "Wrong_AR", "Spat_Inconsistent", "High_Spr_Low_Sum", "Underest_SumFall", "Overest_Mar", "Overest_May"

flow_input_type = "observations"				# observations, downscaled_historical, downscaled_midcentury, downscaled_endcentury, downscaled_150years

flow_input_source = "WRF_GW_corr"				# CDEC, VIC, WRF. NOTE: not used if flow_input_type==downscaled_150years, in which case main.py loops over climate ensemble, resetting flow_input_source each time.

# number of sensitivity analyses. see 'cord/data/input/base_inflows.json' for sensitivity factors.
total_sensitivity_factors = "1"

# location of sensitivity factor sample file (path relative to working_directory)
sensitivity_sample_file = "cord/data/input/SALib-sample.txt"

# json file telling which data we want to output (path relative to working_directory)
output_list = "cord/data/input/output_list.json"

# clean output by only writing columns with non-zero values? Will save space but may make post-processing a bit more tedious.
clean_output = "True"			
# Save all the possible outputs
save_full = "True"
